# sfa deals with testing on_success, on_failure, always


# there are two types of error in powershell
# - terminating errors => exit ps session => example invalidCommand
# - non-terminating errors => does not exis ps session => example Write-Error "something"

jobs:
  - name: x86-64-windows-server-2016-host-sfa-on-success
    type: runSh
    runtime:
      architecture: x86_64
      nodePool: custom__x86_64__WindowsServer_2016
      container: false
    flags:
      - x86-64
      - windows-server-2016
      - x86-64-windows-server-2016-host-sfa
    steps:
      - IN: x86-64-trigger
      - IN: windows-server-2016-trigger
      - TASK:
          name: shipctl-should-work
          script:
            - dir
    on_success:
      - script: echo "this should be logged"

  - name: x86-64-windows-server-2016-host-sfa-on-failure
    type: runSh
    runtime:
      architecture: x86_64
      nodePool: custom__x86_64__WindowsServer_2016
      container: false
    flags:
      - x86-64
      - windows-server-2016
      - x86-64-windows-server-2016-host-sfa
    steps:
      - IN: x86-64-trigger
      - IN: windows-server-2016-trigger
      - TASK:
          name: shipctl-should-work
          script:
            - invalidCommand
    on_failure:
      - script: echo "this should be logged"

  - name: x86-64-windows-server-2016-host-sfa-on-success-always
    type: runSh
    runtime:
      architecture: x86_64
      nodePool: custom__x86_64__WindowsServer_2016
      container: false
    flags:
      - x86-64
      - windows-server-2016
      - x86-64-windows-server-2016-host-sfa
    steps:
      - IN: x86-64-trigger
      - IN: windows-server-2016-trigger
      - TASK:
          name: shipctl-should-work
          script:
            - dir
    on_success:
      - script: echo "this should be logged"
    always:
      - script: echo "this is always script"

  - name: x86-64-windows-server-2016-host-sfa-on-failure-always
    type: runSh
    runtime:
      architecture: x86_64
      nodePool: custom__x86_64__WindowsServer_2016
      container: false
    flags:
      - x86-64
      - windows-server-2016
      - x86-64-windows-server-2016-host-sfa
    steps:
      - IN: x86-64-trigger
      - IN: windows-server-2016-trigger
      - TASK:
          name: shipctl-should-work
          script:
            - invalidCommand
    on_failure:
      - script: echo "this should be logged"
    always:
      - script: echo "this is always script"

  - name: x86-64-windows-server-2016-host-sfa-on-success-invalid-command
    type: runSh
    runtime:
      architecture: x86_64
      nodePool: custom__x86_64__WindowsServer_2016
      container: false
    flags:
      - x86-64
      - windows-server-2016
      - x86-64-windows-server-2016-host-sfa
    steps:
      - IN: x86-64-trigger
      - IN: windows-server-2016-trigger
      - TASK:
          name: shipctl-should-work
          script:
            - dir
    on_success:
      - script: echo "this should be shown and ErrorActionPreference = $ErrorActionPreference"
      - script: Write-Error "This is a non-terminating error"
      - script: invalidCommand
      - script: echo "this line is after a terminating error"
      - script: echo "build status should be success"

  - name: x86-64-windows-server-2016-host-sfa-on-failure-invalid-command
    type: runSh
    runtime:
      architecture: x86_64
      nodePool: custom__x86_64__WindowsServer_2016
      container: false
    flags:
      - x86-64
      - windows-server-2016
      - x86-64-windows-server-2016-host-sfa
    steps:
      - IN: x86-64-trigger
      - IN: windows-server-2016-trigger
      - TASK:
          name: shipctl-should-work
          script:
            - invalidCommand
    on_failure:
      - script: echo "this should be shown and ErrorActionPreference = $ErrorActionPreference"
      - script: Write-Error "This is a non-terminating error"
      - script: invalidCommand
      - script: echo "this line is after a terminating error"
      - script: echo "build status should be failure"
